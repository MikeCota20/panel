{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrmik\\\\Desktop\\\\panel\\\\panel\\\\src\\\\pages\\\\ChapterView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport LightGallery from 'lightgallery/react';\nimport 'lightgallery/css/lightgallery.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Viewer() {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtiene el ID del capítulo desde la URL\n  const [pages, setPages] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch de las páginas del capítulo desde la API\n  useEffect(() => {\n    const fetchPages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/chapters/${id}/pages`);\n        setPages(response.data);\n      } catch (error) {\n        console.error('Error fetching pages:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPages();\n  }, [id]); // Se ejecuta cada vez que cambia la ID del capítulo\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PanelView\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: pages.length > 0 ? /*#__PURE__*/_jsxDEV(LightGallery, {\n        speed: 500,\n        mode: \"lg-fade\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/comics/${pages[0].image_url}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/comics/${pages[0].image_url}`,\n            alt: `Page ${pages[0].page_number}`,\n            style: {\n              width: '80%',\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, pages[0].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No pages available for this chapter.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Viewer, \"ZxqTzvJiBcGs5NRpqfXrPaNDxbc=\", false, function () {\n  return [useParams];\n});\n_c = Viewer;\nexport default Viewer;\nvar _c;\n$RefreshReg$(_c, \"Viewer\");","map":{"version":3,"names":["React","useEffect","useState","axios","LightGallery","useParams","jsxDEV","_jsxDEV","Viewer","_s","id","pages","setPages","loading","setLoading","fetchPages","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","length","speed","mode","href","image_url","src","alt","page_number","width","cursor","_c","$RefreshReg$"],"sources":["C:/Users/mrmik/Desktop/panel/panel/src/pages/ChapterView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport LightGallery from 'lightgallery/react';\r\nimport 'lightgallery/css/lightgallery.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Viewer() {\r\n  const { id } = useParams(); // Obtiene el ID del capítulo desde la URL\r\n  const [pages, setPages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch de las páginas del capítulo desde la API\r\n  useEffect(() => {\r\n    const fetchPages = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/chapters/${id}/pages`);\r\n        setPages(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching pages:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPages();\r\n  }, [id]); // Se ejecuta cada vez que cambia la ID del capítulo\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>PanelView</h1>\r\n\r\n      {/* Solo se muestra la primera imagen */}\r\n      <div style={{ textAlign: 'center' }}>\r\n        {pages.length > 0 ? (\r\n          <LightGallery speed={500} mode=\"lg-fade\">\r\n            {/* Aquí solo se muestra la primera imagen, pero la galería está lista para mostrar todas las imágenes al hacer clic */}\r\n            <a href={`/comics/${pages[0].image_url}`} key={pages[0].id}>\r\n              <img\r\n                src={`/comics/${pages[0].image_url}`}\r\n                alt={`Page ${pages[0].page_number}`}\r\n                style={{ width: '80%', cursor: 'pointer' }}\r\n              />\r\n            </a>\r\n          </LightGallery>\r\n        ) : (\r\n          <p>No pages available for this chapter.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
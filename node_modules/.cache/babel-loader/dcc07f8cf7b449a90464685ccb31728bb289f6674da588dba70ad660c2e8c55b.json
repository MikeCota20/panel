{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrmik\\\\Desktop\\\\panel\\\\panel\\\\src\\\\pages\\\\ChapterView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport LightGallery from 'lightgallery/react';\nimport 'lightgallery/css/lightgallery.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Viewer() {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtiene el ID del capítulo desde la URL\n  const [pages, setPages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0); // Para controlar la imagen actual mostrada\n\n  // Fetch de las páginas del capítulo desde la API\n  useEffect(() => {\n    const fetchPages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/chapters/${id}/pages`);\n        setPages(response.data);\n      } catch (error) {\n        console.error('Error fetching pages:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPages();\n  }, [id]); // Se ejecuta cada vez que cambia la ID del capítulo\n\n  // Si la carga está en proceso, mostramos el mensaje de carga\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Función para manejar el cambio de imagen en la galería\n  const handleSlide = index => {\n    setCurrentImageIndex(index); // Actualiza el índice de la imagen seleccionada\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PanelView\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: pages.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/comics/${pages[currentImageIndex].image_url}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/comics/${pages[currentImageIndex].image_url}`,\n              alt: `Page ${pages[currentImageIndex].page_number}`,\n              style: {\n                width: '80%',\n                cursor: 'pointer'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, pages[currentImageIndex].id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LightGallery, {\n          speed: 500,\n          mode: \"lg-fade\",\n          index: currentImageIndex // Aseguramos que la galería comience en la imagen seleccionada\n          ,\n          onSlide: event => handleSlide(event.index) // Sincroniza el índice entre la galería y la página\n          ,\n          children: pages.map((page, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/comics/${page.image_url}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/comics/${page.image_url}`,\n              alt: `Page ${page.page_number}`,\n              style: {\n                display: 'none'\n              } // Ocultamos las imágenes fuera de la vista\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, page.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No pages available for this chapter.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Viewer, \"BhOZmC6I6kvLbkycc8iLSon19qU=\", false, function () {\n  return [useParams];\n});\n_c = Viewer;\nexport default Viewer;\nvar _c;\n$RefreshReg$(_c, \"Viewer\");","map":{"version":3,"names":["React","useEffect","useState","axios","LightGallery","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Viewer","_s","id","pages","setPages","loading","setLoading","currentImageIndex","setCurrentImageIndex","fetchPages","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSlide","index","style","textAlign","length","marginBottom","href","image_url","src","alt","page_number","width","cursor","speed","mode","onSlide","event","map","page","display","_c","$RefreshReg$"],"sources":["C:/Users/mrmik/Desktop/panel/panel/src/pages/ChapterView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport LightGallery from 'lightgallery/react';\r\nimport 'lightgallery/css/lightgallery.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Viewer() {\r\n  const { id } = useParams(); // Obtiene el ID del capítulo desde la URL\r\n  const [pages, setPages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0); // Para controlar la imagen actual mostrada\r\n\r\n  // Fetch de las páginas del capítulo desde la API\r\n  useEffect(() => {\r\n    const fetchPages = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/chapters/${id}/pages`);\r\n        setPages(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching pages:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPages();\r\n  }, [id]); // Se ejecuta cada vez que cambia la ID del capítulo\r\n\r\n  // Si la carga está en proceso, mostramos el mensaje de carga\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  // Función para manejar el cambio de imagen en la galería\r\n  const handleSlide = (index) => {\r\n    setCurrentImageIndex(index); // Actualiza el índice de la imagen seleccionada\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>PanelView</h1>\r\n\r\n      <div style={{ textAlign: 'center' }}>\r\n        {pages.length > 0 ? (\r\n          <>\r\n            {/* Muestra la imagen seleccionada en la página */}\r\n            <div style={{ marginBottom: '20px' }}>\r\n              <a href={`/comics/${pages[currentImageIndex].image_url}`} key={pages[currentImageIndex].id}>\r\n                <img\r\n                  src={`/comics/${pages[currentImageIndex].image_url}`}\r\n                  alt={`Page ${pages[currentImageIndex].page_number}`}\r\n                  style={{ width: '80%', cursor: 'pointer' }}\r\n                />\r\n              </a>\r\n            </div>\r\n\r\n            {/* Galería de imágenes que permite seleccionar una página */}\r\n            <LightGallery\r\n              speed={500}\r\n              mode=\"lg-fade\"\r\n              index={currentImageIndex} // Aseguramos que la galería comience en la imagen seleccionada\r\n              onSlide={(event) => handleSlide(event.index)} // Sincroniza el índice entre la galería y la página\r\n            >\r\n              {pages.map((page, index) => (\r\n                <a href={`/comics/${page.image_url}`} key={page.id}>\r\n                  <img\r\n                    src={`/comics/${page.image_url}`}\r\n                    alt={`Page ${page.page_number}`}\r\n                    style={{ display: 'none' }} // Ocultamos las imágenes fuera de la vista\r\n                  />\r\n                </a>\r\n              ))}\r\n            </LightGallery>\r\n          </>\r\n        ) : (\r\n          <p>No pages available for this chapter.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
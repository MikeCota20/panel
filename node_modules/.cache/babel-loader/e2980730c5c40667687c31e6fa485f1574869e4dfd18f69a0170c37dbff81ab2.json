{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrmik\\\\Desktop\\\\panel\\\\panel\\\\src\\\\pages\\\\ChapterView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport LightGallery from 'lightgallery/react';\nimport 'lightgallery/css/lightgallery.css';\nimport { useParams } from 'react-router-dom'; // Para obtener el ID de la URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Viewer() {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtiene el ID del capítulo desde la URL\n  const [pages, setPages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const lightGalleryRef = useRef < ILightGallery > null;\n  const containerRef = useRef(null);\n  const [galleryContainer, setGalleryContainer] = useState(null);\n\n  // Fetch de las páginas del capítulo desde la API\n  useEffect(() => {\n    const fetchPages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/chapters/${id}/pages`);\n        setPages(response.data);\n      } catch (error) {\n        console.error('Error fetching pages:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPages();\n  }, [id]); // Se ejecuta cada vez que cambia la ID del capítulo\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PanelView\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LightGallery, {\n      speed: 500,\n      children: pages.length > 0 ? pages.map(page => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/comics/${page.image_url}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/comics/${page.image_url}`,\n          alt: `Page ${page.page_number}`,\n          style: {\n            width: '100%',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, page.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No pages available for this chapter.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Viewer, \"apznMvmwQtcYt5Ft3JYiixpQVt4=\", false, function () {\n  return [useParams];\n});\n_c = Viewer;\nexport default Viewer;\nvar _c;\n$RefreshReg$(_c, \"Viewer\");","map":{"version":3,"names":["React","useEffect","useState","axios","LightGallery","useParams","jsxDEV","_jsxDEV","Viewer","_s","id","pages","setPages","loading","setLoading","lightGalleryRef","useRef","ILightGallery","containerRef","galleryContainer","setGalleryContainer","fetchPages","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","speed","length","map","page","href","image_url","src","alt","page_number","style","width","cursor","_c","$RefreshReg$"],"sources":["C:/Users/mrmik/Desktop/panel/panel/src/pages/ChapterView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport LightGallery from 'lightgallery/react';\r\nimport 'lightgallery/css/lightgallery.css';\r\nimport { useParams } from 'react-router-dom'; // Para obtener el ID de la URL\r\n\r\nfunction Viewer() {\r\n  const { id } = useParams(); // Obtiene el ID del capítulo desde la URL\r\n  const [pages, setPages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const lightGalleryRef = useRef < ILightGallery > null;\r\n  const containerRef = useRef(null);\r\n  const [galleryContainer, setGalleryContainer] = useState(null);\r\n\r\n  \r\n\r\n  // Fetch de las páginas del capítulo desde la API\r\n  useEffect(() => {\r\n    const fetchPages = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/chapters/${id}/pages`);\r\n        setPages(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching pages:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPages();\r\n  }, [id]); // Se ejecuta cada vez que cambia la ID del capítulo\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>PanelView</h1>\r\n      <LightGallery speed={500}>\r\n        {pages.length > 0 ? (\r\n          pages.map((page) => (\r\n            <a href={`/comics/${page.image_url}`} key={page.id}>\r\n              <img\r\n                src={`/comics/${page.image_url}`}\r\n                alt={`Page ${page.page_number}`}\r\n                style={{ width: '100%', cursor: 'pointer' }}\r\n              />\r\n            </a>\r\n          ))\r\n        ) : (\r\n          <p>No pages available for this chapter.</p>\r\n        )}\r\n      </LightGallery>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrmik\\\\Desktop\\\\panel\\\\panel\\\\src\\\\pages\\\\Title.jsx\",\n  _s = $RefreshSig$();\nimport { useSearchParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Title() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [manga, setManga] = useState(null); // Datos del manga\n  const [chapters, setChapters] = useState([]); // Lista de capítulos\n  const [loading, setLoading] = useState(true); // Estado de carga\n\n  // Obtener el ID del manga desde la URL\n  const mangaId = searchParams.get('id');\n  useEffect(() => {\n    const fetchMangaAndChapters = async () => {\n      if (mangaId) {\n        setLoading(true);\n        try {\n          const response = await axios.get(`http://localhost:5000/api/titles?id=${mangaId}`);\n          if (response.data) {\n            setManga(response.data.manga); // Datos del manga\n            setChapters(response.data.chapters); // Lista de capítulos\n          } else {\n            setManga(null);\n            setChapters([]);\n          }\n        } catch (error) {\n          console.error('Error al obtener los datos:', error);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    fetchMangaAndChapters();\n  }, [mangaId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : manga ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: manga.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Autor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this), \" \", manga.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"G\\xE9nero:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }, this), \" \", manga.genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Sinopsis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this), \" \", manga.synopsis]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: manga.cover,\n        alt: manga.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chapters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), chapters.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chapters.map(chapter => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [chapter.title, \" - \", chapter.release_date]\n        }, chapter.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No chapters found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No se encontr\\xF3 el c\\xF3mic.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Title, \"KTAwg8icglW4U7xomO/GlGJ1XuA=\", false, function () {\n  return [useSearchParams];\n});\n_c = Title;\nexport default Title;\nvar _c;\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"names":["useSearchParams","React","useEffect","useState","axios","jsxDEV","_jsxDEV","Title","_s","searchParams","manga","setManga","chapters","setChapters","loading","setLoading","mangaId","get","fetchMangaAndChapters","response","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","author","genre","synopsis","src","cover","alt","length","map","chapter","release_date","id","_c","$RefreshReg$"],"sources":["C:/Users/mrmik/Desktop/panel/panel/src/pages/Title.jsx"],"sourcesContent":["import { useSearchParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Title() {\r\n    const [searchParams] = useSearchParams();\r\n    const [manga, setManga] = useState(null); // Datos del manga\r\n    const [chapters, setChapters] = useState([]); // Lista de capítulos\r\n    const [loading, setLoading] = useState(true); // Estado de carga\r\n\r\n    // Obtener el ID del manga desde la URL\r\n    const mangaId = searchParams.get('id');\r\n\r\n    useEffect(() => {\r\n        const fetchMangaAndChapters = async () => {\r\n            if (mangaId) {\r\n                setLoading(true);\r\n                try {\r\n                    const response = await axios.get(`http://localhost:5000/api/titles?id=${mangaId}`);\r\n                    \r\n                    if (response.data) {\r\n                        setManga(response.data.manga);      // Datos del manga\r\n                        setChapters(response.data.chapters); // Lista de capítulos\r\n                    } else {\r\n                        setManga(null);\r\n                        setChapters([]);\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error al obtener los datos:', error);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchMangaAndChapters();\r\n    }, [mangaId]);\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : manga ? (\r\n                <div>\r\n                    <h1>{manga.title}</h1>\r\n                    <p><strong>Autor:</strong> {manga.author}</p>\r\n                    <p><strong>Género:</strong> {manga.genre}</p>\r\n                    <p><strong>Sinopsis:</strong> {manga.synopsis}</p>\r\n                    <img src={manga.cover} alt={manga.title} />\r\n\r\n                    <h2>Chapters</h2>\r\n                    {chapters.length > 0 ? (\r\n                        <ul>\r\n                            {chapters.map((chapter) => (\r\n                                <li key={chapter.id}>\r\n                                    {chapter.title} - {chapter.release_date}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>No chapters found.</p>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <p>No se encontró el cómic.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
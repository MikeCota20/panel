{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrmik\\\\Desktop\\\\panel\\\\panel\\\\src\\\\components\\\\MangaCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport placeholder from \"../assets/imgs/istockphoto-1147544807-612x612.jpg\";\nimport \"../styles/mangaCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MangaCard() {\n  _s();\n  const [mangas, setMangas] = useState([]); // Estado para almacenar los mangas\n  const [loading, setLoading] = useState(true); // Estado de carga\n\n  // useEffect para obtener los datos de los mangas desde la API\n  useEffect(() => {\n    const fetchMangas = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/mangas');\n        setMangas(response.data); // Actualiza el estado con los mangas obtenidos\n      } catch (error) {\n        console.error('Error:', error);\n      } finally {\n        setLoading(false); // Finaliza la carga\n      }\n    };\n    fetchMangas();\n  }, []); // Se ejecuta solo una vez al montar el componente\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manga-cards-container\",\n    children: mangas.length > 0 ? mangas.map((mangas, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"template\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: placeholder,\n          alt: mangas.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: mangas.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: mangas.synopsis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), \" \"]\n    }, mangas.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Manga not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(MangaCard, \"3HreSCrGiGjkoFERbF2C/0PwLlw=\");\n_c = MangaCard;\nexport default MangaCard;\nvar _c;\n$RefreshReg$(_c, \"MangaCard\");","map":{"version":3,"names":["React","useEffect","useState","axios","placeholder","jsxDEV","_jsxDEV","MangaCard","_s","mangas","setMangas","loading","setLoading","fetchMangas","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","index","src","alt","title","synopsis","id","_c","$RefreshReg$"],"sources":["C:/Users/mrmik/Desktop/panel/panel/src/components/MangaCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport placeholder from \"../assets/imgs/istockphoto-1147544807-612x612.jpg\";\r\nimport \"../styles/mangaCard.css\";\r\n\r\nfunction MangaCard() {\r\n  const [mangas, setMangas] = useState([]); // Estado para almacenar los mangas\r\n  const [loading, setLoading] = useState(true); // Estado de carga\r\n\r\n  // useEffect para obtener los datos de los mangas desde la API\r\n  useEffect(() => {\r\n    const fetchMangas = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/mangas');\r\n        setMangas(response.data); // Actualiza el estado con los mangas obtenidos\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      } finally {\r\n        setLoading(false); // Finaliza la carga\r\n      }\r\n    };\r\n\r\n    fetchMangas();\r\n  }, []); // Se ejecuta solo una vez al montar el componente\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"manga-cards-container\">\r\n      {mangas.length > 0 ? (\r\n        mangas.map((mangas, index) => (\r\n          <div className=\"template\" key={mangas.id}>\r\n            <div className=\"template-img\">\r\n              <img src={placeholder} alt={mangas.title} />\r\n            </div>\r\n            <h2>{mangas.title}</h2>\r\n            <p>{mangas.synopsis}</p> {/* O cualquier otro campo de tu base de datos */}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>Manga not found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MangaCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,mDAAmD;AAC3E,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,kCAAkC,CAAC;QACpEL,SAAS,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIF,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAa,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,uBAAuB;IAAAL,QAAA,EACnCV,MAAM,CAACgB,MAAM,GAAG,CAAC,GAChBhB,MAAM,CAACiB,GAAG,CAAC,CAACjB,MAAM,EAAEkB,KAAK,kBACvBrB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAL,QAAA,gBACvBb,OAAA;QAAKkB,SAAS,EAAC,cAAc;QAAAL,QAAA,eAC3Bb,OAAA;UAAKsB,GAAG,EAAExB,WAAY;UAACyB,GAAG,EAAEpB,MAAM,CAACqB;QAAM;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACNjB,OAAA;QAAAa,QAAA,EAAKV,MAAM,CAACqB;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBjB,OAAA;QAAAa,QAAA,EAAIV,MAAM,CAACsB;MAAQ;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC;IAAA,GALId,MAAM,CAACuB,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMnC,CACN,CAAC,gBAEFjB,OAAA;MAAAa,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACvB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CAzCQD,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AA2ClB,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrmik\\\\Desktop\\\\panel\\\\panel\\\\src\\\\pages\\\\Title.jsx\",\n  _s = $RefreshSig$();\nimport { useSearchParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Title() {\n  _s();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [manga, setManga] = useState(null); // Almacena los datos del cómic\n  const [loading, setLoading] = useState(true); // Estado de carga\n\n  // Obtén el ID del cómic desde los parámetros de la URL\n  const mangaId = searchParams.get('id');\n\n  // useEffect para cargar los datos del cómic cuando cambia el ID\n  useEffect(() => {\n    const fetchManga = async () => {\n      if (mangaId) {\n        setLoading(true); // Comienza el estado de carga\n        try {\n          const response = await axios.get(`http://localhost:5000/api/titles?id=${mangaId}`);\n          setManga(response.data); // Actualiza los datos del cómic\n        } catch (error) {\n          console.error('Error al obtener los datos del cómic:', error);\n        } finally {\n          setLoading(false); // Finaliza la carga\n        }\n      }\n    };\n    fetchManga();\n  }, [mangaId]); // Se ejecuta cada vez que cambia el ID del cómic\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this) : manga ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: manga.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Autor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, this), \" \", manga.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"G\\xE9nero:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this), \" \", manga.genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Sinopsis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this), \" \", manga.synopsis]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: manga.cover || \"../assets/banners/default.png\",\n        alt: manga.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No se encontr\\xF3 el c\\xF3mic.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSearchParams({\n        id: '2'\n      }),\n      children: \"Ir al C\\xF3mic 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Title, \"bAUuswN+CPID+SBu5dLwBzbUSMU=\", false, function () {\n  return [useSearchParams];\n});\n_c = Title;\nexport default Title;\nvar _c;\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"names":["useSearchParams","React","useEffect","useState","axios","jsxDEV","_jsxDEV","Title","_s","searchParams","setSearchParams","manga","setManga","loading","setLoading","mangaId","get","fetchManga","response","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","author","genre","synopsis","src","cover","alt","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/mrmik/Desktop/panel/panel/src/pages/Title.jsx"],"sourcesContent":["import { useSearchParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Title() {\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [manga, setManga] = useState(null); // Almacena los datos del cómic\r\n    const [loading, setLoading] = useState(true); // Estado de carga\r\n\r\n    // Obtén el ID del cómic desde los parámetros de la URL\r\n    const mangaId = searchParams.get('id');\r\n\r\n    // useEffect para cargar los datos del cómic cuando cambia el ID\r\n    useEffect(() => {\r\n        const fetchManga = async () => {\r\n            if (mangaId) {\r\n                setLoading(true); // Comienza el estado de carga\r\n                try {\r\n                    const response = await axios.get(`http://localhost:5000/api/titles?id=${mangaId}`);\r\n                    setManga(response.data); // Actualiza los datos del cómic\r\n                } catch (error) {\r\n                    console.error('Error al obtener los datos del cómic:', error);\r\n                } finally {\r\n                    setLoading(false); // Finaliza la carga\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchManga();\r\n    }, [mangaId]); // Se ejecuta cada vez que cambia el ID del cómic\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : manga ? (\r\n                <div>\r\n                    <h1>{manga.title}</h1>\r\n                    <p><strong>Autor:</strong> {manga.author}</p>\r\n                    <p><strong>Género:</strong> {manga.genre}</p>\r\n                    <p><strong>Sinopsis:</strong> {manga.synopsis}</p>\r\n                    <img \r\n                        src={manga.cover || \"../assets/banners/default.png\"}\r\n                        alt={manga.title}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <p>No se encontró el cómic.</p>\r\n            )}\r\n\r\n            <button onClick={() => setSearchParams({ id: '2' })}>Ir al Cómic 2</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
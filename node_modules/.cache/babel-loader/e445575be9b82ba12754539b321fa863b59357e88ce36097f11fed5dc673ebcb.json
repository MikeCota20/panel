{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrmik\\\\Desktop\\\\panel\\\\panel\\\\src\\\\pages\\\\ChapterView.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import LightGallery from 'lightgallery/react';\n// import 'lightgallery/css/lightgallery.css';\n// import { useParams } from 'react-router-dom'; // Para obtener el ID de la URL\n\n// function Viewer() {\n//   const { id } = useParams(); // Obtiene el ID del capítulo desde la URL\n//   const [pages, setPages] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   // Fetch de las páginas del capítulo desde la API\n//   useEffect(() => {\n//     const fetchPages = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/api/chapters/${id}/pages`);\n//         setPages(response.data);\n//       } catch (error) {\n//         console.error('Error fetching pages:', error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchPages();\n//   }, [id]); // Se ejecuta cada vez que cambia la ID del capítulo\n\n//   if (loading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>PanelView</h1>\n//       <LightGallery speed={500}>\n//         {pages.length > 0 ? (\n//           pages.map((page) => (\n//             <a href={`/comics/${page.image_url}`} key={page.id}>\n//               <img\n//                 src={`/comics/${page.image_url}`}\n//                 alt={`Page ${page.page_number}`}\n//                 style={{ width: '100%', cursor: 'pointer' }}\n//               />\n//             </a>\n//           ))\n//         ) : (\n//           <p>No pages available for this chapter.</p>\n//         )}\n//       </LightGallery>\n//     </div>\n//   );\n// }\n\n// export default Viewer;\n\nimport { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport LightGallery from 'lightgallery/react';\nimport { LightGallery as ILightGallery } from 'lightgallery/lightgallery';\nimport lgZoom from 'lightgallery/plugins/zoom';\nimport lgThumbnail from 'lightgallery/plugins/thumbnail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const lightGalleryRef = useRef < ILightGallery > null;\n  const containerRef = useRef(null);\n  const [galleryContainer, setGalleryContainer] = useState(null);\n  const onInit = useCallback(detail => {\n    if (detail) {\n      lightGalleryRef.current = detail.instance;\n      lightGalleryRef.current.openGallery();\n    }\n  }, []);\n  useEffect(() => {\n    if (containerRef.current) {\n      setGalleryContainer(containerRef.current);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '800px'\n      },\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LightGallery, {\n      container: galleryContainer,\n      onInit: onInit,\n      plugins: [lgZoom, lgThumbnail],\n      dynamic: true,\n      dynamicEl: [{\n        src: '/comics/default.jpg',\n        responsive: '...',\n        thumb: '...',\n        subHtml: `...`\n      }, {\n        src: '/comics/default2.jpg',\n        responsive: '...',\n        thumb: '...',\n        subHtml: `...`\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"BA9RSCgcBTiRzBkp1XV0nSbf1Po=\");\n_c = App;\nexport default Viewer;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["FC","useCallback","useEffect","useRef","useState","LightGallery","ILightGallery","lgZoom","lgThumbnail","jsxDEV","_jsxDEV","App","_s","lightGalleryRef","containerRef","galleryContainer","setGalleryContainer","onInit","detail","current","instance","openGallery","className","children","style","height","ref","fileName","_jsxFileName","lineNumber","columnNumber","container","plugins","dynamic","dynamicEl","src","responsive","thumb","subHtml","_c","Viewer","$RefreshReg$"],"sources":["C:/Users/mrmik/Desktop/panel/panel/src/pages/ChapterView.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import LightGallery from 'lightgallery/react';\r\n// import 'lightgallery/css/lightgallery.css';\r\n// import { useParams } from 'react-router-dom'; // Para obtener el ID de la URL\r\n\r\n// function Viewer() {\r\n//   const { id } = useParams(); // Obtiene el ID del capítulo desde la URL\r\n//   const [pages, setPages] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   // Fetch de las páginas del capítulo desde la API\r\n//   useEffect(() => {\r\n//     const fetchPages = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:5000/api/chapters/${id}/pages`);\r\n//         setPages(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching pages:', error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchPages();\r\n//   }, [id]); // Se ejecuta cada vez que cambia la ID del capítulo\r\n\r\n//   if (loading) {\r\n//     return <p>Loading...</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>PanelView</h1>\r\n//       <LightGallery speed={500}>\r\n//         {pages.length > 0 ? (\r\n//           pages.map((page) => (\r\n//             <a href={`/comics/${page.image_url}`} key={page.id}>\r\n//               <img\r\n//                 src={`/comics/${page.image_url}`}\r\n//                 alt={`Page ${page.page_number}`}\r\n//                 style={{ width: '100%', cursor: 'pointer' }}\r\n//               />\r\n//             </a>\r\n//           ))\r\n//         ) : (\r\n//           <p>No pages available for this chapter.</p>\r\n//         )}\r\n//       </LightGallery>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Viewer;\r\n\r\nimport { FC, useCallback, useEffect, useRef, useState } from 'react';\r\nimport LightGallery from 'lightgallery/react';\r\nimport { LightGallery as ILightGallery } from 'lightgallery/lightgallery';\r\nimport lgZoom from 'lightgallery/plugins/zoom';\r\nimport lgThumbnail from 'lightgallery/plugins/thumbnail';\r\n\r\nexport const App = () => {\r\n    const lightGalleryRef = useRef < ILightGallery > null;\r\n    const containerRef = useRef(null);\r\n    const [galleryContainer, setGalleryContainer] = useState(null);\r\n\r\n    const onInit = useCallback((detail) => {\r\n        if (detail) {\r\n            lightGalleryRef.current = detail.instance;\r\n            lightGalleryRef.current.openGallery();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (containerRef.current) {\r\n            setGalleryContainer(containerRef.current);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div style={{ height: '800px' }} ref={containerRef}></div>\r\n            <LightGallery\r\n                container={galleryContainer}\r\n                onInit={onInit}\r\n                plugins={[lgZoom, lgThumbnail]}\r\n                dynamic={true}\r\n                dynamicEl={[\r\n                    {\r\n                        src: '/comics/default.jpg',\r\n                        responsive: '...',\r\n                        thumb: '...',\r\n                        subHtml: `...`,\r\n                    },\r\n                    {\r\n                        src: '/comics/default2.jpg',\r\n                        responsive: '...',\r\n                        thumb: '...',\r\n                        subHtml: `...`,\r\n                    },\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Viewer;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,EAAE,EAAEC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACpE,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,SAASA,YAAY,IAAIC,aAAa,QAAQ,2BAA2B;AACzE,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,WAAW,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,OAAO,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,eAAe,GAAGV,MAAM,GAAGG,aAAa,GAAG,IAAI;EACrD,MAAMQ,YAAY,GAAGX,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMa,MAAM,GAAGhB,WAAW,CAAEiB,MAAM,IAAK;IACnC,IAAIA,MAAM,EAAE;MACRL,eAAe,CAACM,OAAO,GAAGD,MAAM,CAACE,QAAQ;MACzCP,eAAe,CAACM,OAAO,CAACE,WAAW,CAAC,CAAC;IACzC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACZ,IAAIY,YAAY,CAACK,OAAO,EAAE;MACtBH,mBAAmB,CAACF,YAAY,CAACK,OAAO,CAAC;IAC7C;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBb,OAAA;MAAKc,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAACC,GAAG,EAAEZ;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1DpB,OAAA,CAACL,YAAY;MACT0B,SAAS,EAAEhB,gBAAiB;MAC5BE,MAAM,EAAEA,MAAO;MACfe,OAAO,EAAE,CAACzB,MAAM,EAAEC,WAAW,CAAE;MAC/ByB,OAAO,EAAE,IAAK;MACdC,SAAS,EAAE,CACP;QACIC,GAAG,EAAE,qBAAqB;QAC1BC,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE,KAAK;QACZC,OAAO,EAAE;MACb,CAAC,EACD;QACIH,GAAG,EAAE,sBAAsB;QAC3BC,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE,KAAK;QACZC,OAAO,EAAE;MACb,CAAC;IACH;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAClB,EAAA,CA3CWD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA6ChB,eAAe6B,MAAM;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
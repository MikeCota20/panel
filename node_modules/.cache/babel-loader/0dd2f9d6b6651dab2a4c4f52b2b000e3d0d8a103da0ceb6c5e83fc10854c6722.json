{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrmik\\\\Desktop\\\\panel\\\\panel\\\\src\\\\pages\\\\ChapterView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport LightGallery from 'lightgallery/react';\nimport 'lightgallery/css/lightgallery.css';\nimport { useParams } from 'react-router-dom';\nimport Comments from '../components/Comments';\nimport \"../styles/chapterViewer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Viewer() {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtiene el ID del capítulo desde la URL\n  const [pages, setPages] = useState([]);\n  const [chapterInfo, setChapterInfo] = useState({\n    chapter_title: '',\n    manga_title: ''\n  });\n  const [loading, setLoading] = useState(true);\n\n  // Fetch de las páginas del capítulo desde la API\n  useEffect(() => {\n    const fetchPages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/chapters/${id}/pages`);\n        setPages(response.data);\n        const pagesResponse = await axios.get(`http://localhost:5000/api/chapters/${id}/pages`);\n        setPages(pagesResponse.data);\n      } catch (error) {\n        console.error('Error fetching pages:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPages();\n  }, [id]); // Se ejecuta cada vez que cambia la ID del capítulo\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      className: \"mediaViewerContainer\",\n      children: pages.length > 0 ? /*#__PURE__*/_jsxDEV(LightGallery, {\n        speed: 500,\n        mode: \"lg-fade\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/comics/${pages[0].image_url}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/comics/${pages[0].image_url}`,\n            alt: `Page ${pages[0].page_number}`,\n            style: {\n              width: '80%',\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, pages[0].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), pages.slice(1).map(page => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/comics/${page.image_url}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/comics/${page.image_url}`,\n            alt: `Page ${page.page_number}`,\n            style: {\n              display: 'none'\n            } // Oculta las imágenes fuera de la galería\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, page.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No pages available for this chapter.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Viewer, \"m2n6YV65ydXBtsNvO9hb6HACTgQ=\", false, function () {\n  return [useParams];\n});\n_c = Viewer;\nexport default Viewer;\nvar _c;\n$RefreshReg$(_c, \"Viewer\");","map":{"version":3,"names":["React","useEffect","useState","axios","LightGallery","useParams","Comments","jsxDEV","_jsxDEV","Viewer","_s","id","pages","setPages","chapterInfo","setChapterInfo","chapter_title","manga_title","loading","setLoading","fetchPages","response","get","data","pagesResponse","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","className","length","speed","mode","href","image_url","src","alt","page_number","width","cursor","slice","map","page","display","_c","$RefreshReg$"],"sources":["C:/Users/mrmik/Desktop/panel/panel/src/pages/ChapterView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport LightGallery from 'lightgallery/react';\r\nimport 'lightgallery/css/lightgallery.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport Comments from '../components/Comments';\r\nimport \"../styles/chapterViewer.css\"\r\n\r\nfunction Viewer() {\r\n  const { id } = useParams(); // Obtiene el ID del capítulo desde la URL\r\n  const [pages, setPages] = useState([]);\r\n  const [chapterInfo, setChapterInfo] = useState({ chapter_title: '', manga_title: '' });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch de las páginas del capítulo desde la API\r\n  useEffect(() => {\r\n    const fetchPages = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/chapters/${id}/pages`);\r\n        setPages(response.data);\r\n\r\n        const pagesResponse = await axios.get(`http://localhost:5000/api/chapters/${id}/pages`);\r\n        setPages(pagesResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching pages:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPages();\r\n  }, [id]); // Se ejecuta cada vez que cambia la ID del capítulo\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      {/* Solo se muestra la primera imagen en la página */}\r\n      <div style={{ textAlign: 'center' }} className='mediaViewerContainer'>\r\n        {pages.length > 0 ? (\r\n          <LightGallery speed={500} mode=\"lg-fade\">\r\n            {/* Muestra solo la primera imagen en la página, sin repetirla en la galería */}\r\n            <a href={`/comics/${pages[0].image_url}`} key={pages[0].id}>\r\n              <img\r\n                src={`/comics/${pages[0].image_url}`}\r\n                alt={`Page ${pages[0].page_number}`}\r\n                style={{ width: '80%', cursor: 'pointer' }}\r\n              />\r\n            </a>\r\n\r\n            {/* Muestra todas las imágenes para la galería, excepto la primera */}\r\n            {pages.slice(1).map((page) => (\r\n              <a href={`/comics/${page.image_url}`} key={page.id}>\r\n                <img\r\n                  src={`/comics/${page.image_url}`}\r\n                  alt={`Page ${page.page_number}`}\r\n                  style={{ display: 'none' }} // Oculta las imágenes fuera de la galería\r\n                />\r\n              </a>\r\n            ))}\r\n          </LightGallery>\r\n        ) : (\r\n          <p>No pages available for this chapter.</p>\r\n        )}\r\n      </div>\r\n      <Comments />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Viewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
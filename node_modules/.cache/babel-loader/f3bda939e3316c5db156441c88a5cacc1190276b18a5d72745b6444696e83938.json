{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrmik\\\\Desktop\\\\panel\\\\panel\\\\src\\\\components\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsAuthenticated(!!token);\n    const fetchComments = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/chapters/${id}/comments`);\n        setComments(response.data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n  }, [id]);\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('You must be logged in to comment.');\n        return;\n      }\n      await axios.post(`http://localhost:5000/api/chapters/${id}/comments`, {\n        text: newComment\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setComments([...comments, {\n        text: newComment,\n        created_at: new Date().toISOString()\n      }]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Leave a comment...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You must \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), \" to comment.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.length > 0 ? comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: new Date(comment.created_at).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments yet. Be the first!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"+yDnsGwUQyXGE+Wvt9iehi+e318=\", false, function () {\n  return [useParams];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","Comments","_s","id","comments","setComments","newComment","setNewComment","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","fetchComments","response","get","data","error","console","handleCommentSubmit","e","preventDefault","trim","alert","post","text","headers","Authorization","created_at","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","type","href","length","map","comment","index","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/mrmik/Desktop/panel/panel/src/components/Comments.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Comments() {\r\n  const { id } = useParams();\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    setIsAuthenticated(!!token);\r\n\r\n    const fetchComments = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/chapters/${id}/comments`);\r\n        setComments(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching comments:', error);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, [id]);\r\n\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!newComment.trim()) return;\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        alert('You must be logged in to comment.');\r\n        return;\r\n      }\r\n\r\n      await axios.post(\r\n        `http://localhost:5000/api/chapters/${id}/comments`,\r\n        { text: newComment },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      setComments([...comments, { text: newComment, created_at: new Date().toISOString() }]);\r\n      setNewComment('');\r\n    } catch (error) {\r\n      console.error('Error submitting comment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments-section\">\r\n      <h3>Comments</h3>\r\n      {isAuthenticated ? (\r\n        <form onSubmit={handleCommentSubmit}>\r\n          <textarea\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder=\"Leave a comment...\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      ) : (\r\n        <p>You must <a href=\"/login\">log in</a> to comment.</p>\r\n      )}\r\n\r\n      <div className=\"comments-list\">\r\n        {comments.length > 0 ? (\r\n          comments.map((comment, index) => (\r\n            <div key={index} className=\"comment\">\r\n              <p>{comment.text}</p>\r\n              <small>{new Date(comment.created_at).toLocaleString()}</small>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No comments yet. Be the first!</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
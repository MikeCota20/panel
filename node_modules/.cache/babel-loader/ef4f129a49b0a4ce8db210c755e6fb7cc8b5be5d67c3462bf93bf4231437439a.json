{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrmik\\\\Desktop\\\\panel\\\\panel\\\\src\\\\pages\\\\Title.jsx\",\n  _s = $RefreshSig$();\nimport { useSearchParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Title() {\n  _s();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [manga, setManga] = useState(null); // Almacena los datos del cómic\n  const [chapters, setChapters] = useState([]); // Almacena los capítulos del cómic\n  const [loading, setLoading] = useState(true); // Estado de carga\n\n  // Obtén el ID del cómic desde los parámetros de la URL\n  const mangaId = searchParams.get('id');\n\n  // useEffect para cargar los datos del cómic y sus capítulos cuando cambia el ID\n  useEffect(() => {\n    const fetchMangaAndChapters = async () => {\n      if (mangaId) {\n        setLoading(true); // Comienza el estado de carga\n        try {\n          // Obtener datos del manga\n          const mangaResponse = await axios.get(`http://localhost:5000/api/titles?id=${mangaId}`);\n          setManga(mangaResponse.data);\n\n          // Obtener capítulos relacionados con el manga\n          const chaptersResponse = await axios.get(`http://localhost:5000/api/chapters?manga_id=${mangaId}`);\n          setChapters(chaptersResponse.data);\n        } catch (error) {\n          console.error('Error al obtener los datos:', error);\n        } finally {\n          setLoading(false); // Finaliza la carga\n        }\n      }\n    };\n    fetchMangaAndChapters();\n  }, [mangaId]); // Se ejecuta cada vez que cambia el ID del cómic\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : manga ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: manga.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Autor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }, this), \" \", manga.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"G\\xE9nero:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this), \" \", manga.genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Sinopsis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }, this), \" \", manga.synopsis]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: manga.cover,\n        alt: manga.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chapters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), chapters.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chapters.map(chapter => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Cap\\xEDtulo \", chapter.chapter_number, \": \", chapter.chapter_title]\n        }, chapter.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Oops! The chapter list is empty!!.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Title not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Title, \"nGMZarnM+vJmJuHbJ60rfdyF5cM=\", false, function () {\n  return [useSearchParams];\n});\n_c = Title;\nexport default Title;\nvar _c;\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"names":["useSearchParams","React","useEffect","useState","axios","jsxDEV","_jsxDEV","Title","_s","searchParams","setSearchParams","manga","setManga","chapters","setChapters","loading","setLoading","mangaId","get","fetchMangaAndChapters","mangaResponse","data","chaptersResponse","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","author","genre","synopsis","src","cover","alt","length","map","chapter","chapter_number","chapter_title","id","_c","$RefreshReg$"],"sources":["C:/Users/mrmik/Desktop/panel/panel/src/pages/Title.jsx"],"sourcesContent":["import { useSearchParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Title() {\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [manga, setManga] = useState(null); // Almacena los datos del cómic\r\n    const [chapters, setChapters] = useState([]); // Almacena los capítulos del cómic\r\n    const [loading, setLoading] = useState(true); // Estado de carga\r\n\r\n    // Obtén el ID del cómic desde los parámetros de la URL\r\n    const mangaId = searchParams.get('id');\r\n\r\n    // useEffect para cargar los datos del cómic y sus capítulos cuando cambia el ID\r\n    useEffect(() => {\r\n        const fetchMangaAndChapters = async () => {\r\n            if (mangaId) {\r\n                setLoading(true); // Comienza el estado de carga\r\n                try {\r\n                    // Obtener datos del manga\r\n                    const mangaResponse = await axios.get(`http://localhost:5000/api/titles?id=${mangaId}`);\r\n                    setManga(mangaResponse.data);\r\n\r\n                    // Obtener capítulos relacionados con el manga\r\n                    const chaptersResponse = await axios.get(`http://localhost:5000/api/chapters?manga_id=${mangaId}`);\r\n                    setChapters(chaptersResponse.data);\r\n                } catch (error) {\r\n                    console.error('Error al obtener los datos:', error);\r\n                } finally {\r\n                    setLoading(false); // Finaliza la carga\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchMangaAndChapters();\r\n    }, [mangaId]); // Se ejecuta cada vez que cambia el ID del cómic\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : manga ? (\r\n                <div>\r\n                    <h1>{manga.title}</h1>\r\n                    <p><strong>Autor:</strong> {manga.author}</p>\r\n                    <p><strong>Género:</strong> {manga.genre}</p>\r\n                    <p><strong>Sinopsis:</strong> {manga.synopsis}</p>\r\n                    <img \r\n                        src={manga.cover}\r\n                        alt={manga.title}\r\n                    />\r\n\r\n                    <h2>Chapters</h2>\r\n                    {chapters.length > 0 ? (\r\n                        <ul>\r\n                            {chapters.map((chapter) => (\r\n                                <li key={chapter.id}>\r\n                                    Capítulo {chapter.chapter_number}: {chapter.chapter_title}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>Oops! The chapter list is empty!!.</p>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <p>Title not found!</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}